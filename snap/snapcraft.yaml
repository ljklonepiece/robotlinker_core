name: robotlinker-core
version: 1.0.0
summary: RobotLinker Core
description: A Snap Provides IoT Connectivity Service and Disruptive Software Solution for Robots. Copyright 2017, www.robotlinker.com. 

grade: stable
confinement: strict

apps:

 # ROS-I driver
  launch-robot:
    command: roslaunch ur_modern_driver robotlinker_demo.launch robot_ip:=$SNAP_USER_DATA/config/robot_ips.txt
    plugs: [network, network-bind]

 # AWS-IoT clienct
  launch-aws:
    command: roslaunch aws_gateway aws_test.launch service_cert:=$SNAP_USER_DATA/keys/service.crt service_key:=$SNAP_USER_DATA/keys/service.key location:=$SNAP_USER_DATA/config/location.txt
    plugs: [network, network-bind]

 # ROS-bridge server
  launch-rosbridge:
    command: roslaunch rosbridge_server rosbridge_websocket.launch
    plugs: [network, network-bind]

  # Apache server daemon
  apache:
    command: run-httpd -k start -DFOREGROUND
    stop-command: run-httpd -k stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # MySQL daemon
  mysql:
    command: start_mysql
    stop-command: support-files/mysql.server stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # PHP FPM daemon
  php-fpm:
    command: start-php-fpm
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind, removable-media]

  # MySQL client
  mysql-client:
    command: mysql --defaults-file=$SNAP_DATA/mysql/root.ini
    plugs: [network, network-bind]

  mysqldump:
    command: mysqldump --defaults-file=$SNAP_DATA/mysql/root.ini --lock-tables nextcloud
    plugs: [network, network-bind]

  # redis server daemon
  redis-server:
    command: start-redis-server
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # mDNS daemon
  mdns-publisher:
    command: delay-on-failure mdns-publisher nextcloud
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

parts:
  demo-project:
    plugin: catkin
    source: .
    rosdistro: kinetic
    catkin-packages:
      - talker
      - listener
      - aws_gateway
      - rosbridge_server
      - ur_description
      - ur_modern_driver
      - ur_msgs
    include-roscore: true
    filesets:
        no-easy-install-files:
        - -usr/bin/2to3-2.7
        - -usr/bin/pydoc2.7
        - -usr/lib/python2.7/UserString.py
        - -usr/lib/python2.7/base64.py
        - -usr/lib/python2.7/cProfile.py
        - -usr/lib/python2.7/cgi.py
        - -usr/lib/python2.7/encodings/rot_13.py
        - -usr/lib/python2.7/ensurepip/__init__.py
        - -usr/lib/python2.7/keyword.py
        - -usr/lib/python2.7/lib2to3/pgen2/token.py
        - -usr/lib/python2.7/mimify.py
        - -usr/lib/python2.7/pdb.py
        - -usr/lib/python2.7/platform.py
        - -usr/lib/python2.7/profile.py
        - -usr/lib/python2.7/pydoc.py
        - -usr/lib/python2.7/quopri.py
        - -usr/lib/python2.7/sitecustomize.py
        - -usr/lib/python2.7/smtpd.py
        - -usr/lib/python2.7/smtplib.py
        - -usr/lib/python2.7/symbol.py
        - -usr/lib/python2.7/tabnanny.py
        - -usr/lib/python2.7/test/pystone.py
        - -usr/lib/python2.7/test/regrtest.py
        - -usr/lib/python2.7/timeit.py
        - -usr/lib/python2.7/trace.py
        - -usr/lib/python2.7/uu.py
        - -usr/lib/python2.7/webbrowser.py
        - -usr/share/python/dh_python2
        - -usr/share/python/pyversions.py
    stage:
        - $no-easy-install-files
    snap:
        - $no-easy-install-files

  python-plugin:
    plugin: python
    python-version: python2
    python-packages: [AWSIoTPythonSDK]
  

  apache:
    plugin: apache
    source: http://ftp.wayne.edu/apache/httpd/httpd-2.4.27.tar.bz2
    source-checksum: sha256/71fcc128238a690515bd8174d5330a5309161ef314a326ae45c7c15ed139c13a

    # The built-in Apache modules to enable
    modules:
      - headers
      - proxy
      - proxy_fcgi
      - setenvif
      - env
      - rewrite
      - mime
      - dir
      - authz_core
      - unixd
      - alias
      - ssl
      - socache_shmcb

    filesets:
      exclude:
        - -man
        - -manual
        - -htdocs
        - -include
        - -build
        - -conf/httpd.conf
        - -conf/magic
        - -conf/original
        - -conf/extra
        - -bin/apachectl
        - -bin/envvars*
    stage:
      - $exclude
    prime:
      - $exclude

  apache-customizations:
    plugin: copy
    files:
      src/apache/scripts/*: bin/
      src/apache/conf/*: conf/
      src/apache/utilities/*: utilities/

 # Download the boost headers for MySQL. Note that the version used may need to
  # be updated if the version of MySQL changes.
  boost:
    plugin: copy
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    source-checksum: sha1/5123209db194d66d69a9cfa5af8ff473d5941d97
    files:
      '*': boost/
    prime:
      - -*

  mysql:
    plugin: cmake
    source: https://github.com/kyrofa/mysql-server.git
    source-type: git
    source-branch: mysql-5.7.18_support_no_setpriority
    after: [boost]
    configflags:
      - -DWITH_BOOST=$SNAPCRAFT_STAGE/boost
      - -DWITH_INNODB_PAGE_CLEANER_PRIORITY=OFF
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_EMBEDDED_SHARED_LIBRARY=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DINSTALL_MYSQLTESTDIR=
    build-packages:
      - wget
      - g++
      - cmake
      - bison
      - libncurses5-dev
      - libaio-dev
    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
    prime:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server

      # Remove unused binaries that waste space
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam*
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysql_client_test
      - -bin/mysql_config*
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysql_install_db
      - -bin/mysql_plugin
      - -bin/mysqlpump
      - -bin/mysql_secure_installation
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysqltest
      - -bin/mysql_tzinfo_to_sql
      - -bin/perror
      - -bin/replace
      - -bin/resolveip
      - -bin/resolve_stack_dump
      - -bin/zlib_decompress

  php:
    plugin: php
    source: http://us1.php.net/get/php-7.0.21.tar.bz2/from/this/mirror
    source-checksum: sha256/2ba133c392de6f86aacced8c54e0adefd1c81d3840ac323b9926b8ed3dc6231f
    source-type: tar
    install-via: prefix
    configflags:
      - --enable-fpm
      - --disable-cgi
      - --disable-phar
      - --disable-phpdbg
      - --enable-ctype
      - --enable-mbstring
      - --enable-zip
      - --with-pdo-mysql
      - --with-zlib
      - --with-gd
      - --with-curl
      - --with-openssl
      - --with-bz2
      - --with-mcrypt
      - --enable-exif
      - --enable-intl
      - --with-jpeg-dir=/usr/lib
      - --disable-rpath
    stage-packages:
      # These are only included here until the OS snap stabilizes
      - libxml2
      - libpng12-0
    build-packages:
      - libxml2-dev
      - libcurl4-openssl-dev
      - libpng12-dev
      - libjpeg8-dev
      - libbz2-dev
      - libmcrypt-dev
    prime:
     - -sbin/
     - -etc/
    organize:
      # Put php-fpm in bin with everything else, not sbin.
      sbin/php-fpm: bin/php-fpm
    extensions:
      # Build the redis PHP module
      - source: https://github.com/phpredis/phpredis.git
        source-branch: php7

  redis:
    plugin: redis
    source: http://download.redis.io/releases/redis-3.2.8.tar.gz
    source-checksum: sha1/6780d1abb66f33a97aad0edbe020403d0a15b67f

  mdns-publisher:
    plugin: godeps
    source: https://github.com/kyrofa/mdns-publisher.git
    go-importpath: github.com/kyrofa/mdns-publisher

  # Copy over our MySQL scripts
  mysql-customizations:
    plugin: copy
    files:
      # This one is what creates the initial database and account
      src/mysql/start_mysql: bin/
      src/mysql/my.cnf: my.cnf
      src/mysql/mysql.server: support-files/
      src/mysql/utilities/*: utilities/

  # Copy over our PHP configuration file.
  php-customizations:
    plugin: copy
    files:
      src/php/config/*: config/php/
      src/php/scripts/*: bin/
      src/php/utilities/*: utilities/
    stage-packages: [mawk]

  redis-customizations:
    plugin: copy
    files:
      src/redis/config/*: config/redis/
      src/redis/scripts/*: bin/
      src/redis/utilities/*: utilities/

  #webserver:
  #  plugin: copy
  #  source: src/webserver
  #  files:
  #    '*': htdocs/
  #  prime:
  #    - -*

  # Download the boost headers for MySQL. Note that the version used may need to
  # be updated if the version of MySQL changes.
  boost:
    plugin: copy
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    source-checksum: sha1/5123209db194d66d69a9cfa5af8ff473d5941d97
    files:
      '*': boost/
    prime:
      - -*

  delay-on-failure:
    plugin: copy
    files:
      src/delay-on-failure/delay-on-failure: bin/

  certbot-nextcloud-plugin:
    plugin: python
    python-version: python2
    source: src/https/
    build-packages: [python-dev, libffi-dev]
    python-packages: [cffi]

  setup-https:
    plugin: copy
    files:
      src/https/scripts/*: bin/
      src/https/utilities/*: utilities/
    stage-packages: [openssl]
    stage: [-etc/ssl]
    prime: [-etc/ssl]


